{"version":3,"sources":["logo.svg","images/profile01.jpg","images/profile02.jpg","images/profile03.jpg","images/profile04.jpg","serviceWorker.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","banner","id","class","Date","toLocaleDateString","toLocaleTimeString","ReactDOM","render","document","getElementById","RenderTable","context","lists","i","length","push","key","setInterval","ChangeImg","props","switchImage","bind","state","currentImage","images","profile01","profile02","profile03","profile04","this","setState","src","alt","React","Component","Col2","Section_1","href","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,yMCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qECAN,SAASC,IACP,IAAMA,EACJ,6BAASC,GAAG,UACZ,yBAAKC,MAAM,SACT,gCACE,6CACA,uEACA,uBAAGA,MAAM,UAAS,IAAIC,MAAOC,qBAA7B,MAAqD,IAAID,MAAOE,yBAKtEC,IAASC,OAAOP,EAAOQ,SAASC,eAAe,SAOjD,SAASC,IASP,IARA,IAAIC,EACJ,CACE,sFACA,oFACA,yGACA,0FAEEC,EAAQ,GACJC,EAAE,EAAEA,EAAEF,EAAQG,OAAOD,IAC3BD,EAAMG,KAAK,uBAAGd,GAAG,aAAae,IAAKL,EAAQE,IAAhC,SAAsCF,EAAQE,KAE3D,OAAOD,EAjBTZ,IACAiB,YAAYjB,EAAO,K,IAoBbkB,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,CACXC,aAAc,EACdC,OAAQ,CACNC,IACAC,IACAC,IACAC,MATa,E,0DAwBjB,OATIC,KAAKP,MAAMC,aAAeM,KAAKP,MAAME,OAAOV,OAAS,EACvDe,KAAKC,SAAS,CACZP,aAAcM,KAAKP,MAAMC,aAAe,IAG1CM,KAAKC,SAAS,CACZP,aAAc,IAGXM,KAAKN,e,0CAIZN,YAAYY,KAAKT,YAAa,Q,+BAI9B,OACE,yBAAKlB,MAAM,YACT,yBACEA,MAAM,kBACN6B,IAAKF,KAAKP,MAAME,OAAOK,KAAKP,MAAMC,cAClCS,IAAI,U,GAtCUC,IAAMC,WA6C9B,SAASC,IACP,OACE,yBAAKjC,MAAM,YACT,wCACA,kBAACQ,EAAD,OAIN,SAAS0B,IACP,OACE,6BAASlC,MAAM,kBACb,yBAAKA,MAAM,SACT,yBAAKA,MAAO,eACV,kBAAC,EAAD,MACA,kBAACiC,EAAD,SAOV7B,IAASC,OACP,kBAAC6B,EAAD,MACA5B,SAASC,eAAe,SAI1BH,IAASC,OACD,yBAAKL,MAAM,aACd,wBAAIA,MAAM,SACT,4BAAI,uBAAGmC,KAAK,+CAA+CnC,MAAM,oBAAmB,0BAAMA,MAAM,SAAZ,cACpF,4BAAI,uBAAGmC,KAAK,2CAA2CnC,MAAM,qBAAoB,0BAAMA,MAAM,SAAZ,gBAElF,uDACA,iEAEHM,SAASC,eAAe,WDHpB,kBAAmB6B,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b5bc4d36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile01.27e2aa9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile02.ba857ba2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile03.bbb9af5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile04.4209d83b.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport profile01 from './images/profile01.jpg';\nimport profile02 from './images/profile02.jpg';\nimport profile03 from './images/profile03.jpg';\nimport profile04 from './images/profile04.jpg';\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\n//Banner\nfunction banner(){\n  const banner=\n  ( <section id=\"banner\">\n    <div class=\"inner\">\n      <header>\n        <h1>Melissa Chung</h1>\n        <p>An alpaca a day, keeps the doctor away. </p>\n        <p class=\"clock\">{new Date().toLocaleDateString()}  {new Date().toLocaleTimeString()}</p>\n      </header>\n    </div>\n    </section>\n  )\n  ReactDOM.render(banner,document.getElementById('root'));\n}\nbanner();\nsetInterval(banner,1000);\n\n//Section_1\n\nfunction RenderTable(){\n  let context = \n  [\n    \"國立臺灣大學電機所 R10921A02 鍾麗文\",\n    \"9th臺大音樂節學生樂團徵選冠軍\",\n    \"2022 第10屆音韻獎 創作組 第二名 <寸步難行>\",\n    \"2021 台大畢業歌 <和大笨鳥一起上學>\",\n  ];\n  let lists = [];\n  for(let i=0;i<context.length;i++){\n    lists.push(<p id=\"word_hover\" key={context[i]}>．{context[i]}</p>)\n  }\n  return lists  \n};\n\n//Change Img\nclass ChangeImg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.switchImage = this.switchImage.bind(this);\n    this.state = {\n      currentImage: 0,\n      images: [\n        profile01,\n        profile02,\n        profile03,\n        profile04\n      ]\n    };\n  }\n\n  switchImage() {\n    if (this.state.currentImage < this.state.images.length - 1) {\n      this.setState({\n        currentImage: this.state.currentImage + 1\n      });\n    } else {\n      this.setState({\n        currentImage: 0\n      });\n    }\n    return this.currentImage;\n  }\n\n  componentDidMount() {\n    setInterval(this.switchImage, 2500);\n  }\n\n  render() {\n    return (\n      <div class=\"col col1\">\n        <img\n          class=\"image round fit\"\n          src={this.state.images[this.state.currentImage]}\n          alt=\"\"\n        />\n      </div>\n    );\n  }\n}\n\nfunction Col2(){\n  return(\n    <div class=\"col col2\">\n      <h3>About Me</h3>\n      <RenderTable />\n    </div>\n  )\n}\nfunction Section_1() {\n  return (\n    <section class=\"wrapper style1\">\n      <div class=\"inner\">\n        <div class =\"flex flex-2\">\n          <ChangeImg />\n          <Col2 />\n        </div>\n      </div>\n    </section>\n  );\n}\n//section_1\nReactDOM.render(\n  <Section_1 />,\n  document.getElementById('main')\n);\n\n//footer\nReactDOM.render(\n        <div class=\"copyright\">\n\t\t\t\t\t<ul class=\"icons\">\n\t\t\t\t\t\t<li><a href=\"https://www.facebook.com/melissa.t.clark.50/\" class=\"icon fa-facebook\"><span class=\"label\">Facebook</span></a></li>\n\t\t\t\t\t\t<li><a href=\"https://www.instagram.com/melissa_mofei/\" class=\"icon fa-instagram\"><span class=\"label\">Instagram</span></a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div>Cellphone: 0917801088 </div>\n\t\t\t\t\t<div>Email: hypermofei0801@gmail.com</div>\n        </div>,\n  document.getElementById('footer')\n);\n\n/*var PicSrc=document.getElementById(\"mypic\");\nconsole.log(\"hello\");\nconsole.log(PicSrc);\nPicSrc.addEventListener('mouseout',\nfunction(){\n  PicSrc.src=require('./images/Melissa.jpg');\n}\n)\nPicSrc.addEventListener('mouseover',\nfunction(){\n  PicSrc.src=require('./images/alpaca_pic.jpg');\n}\n)*/\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}